volumes:
  static:
  media:
  redis:
  postgres:

networks:
  layer:
    driver: bridge

services:
  web:
    image: air:latest
    deploy:
      mode: replicated
      replicas: 1
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /app/entrypoint.sh
    restart: always
    volumes:
      - static:/app/static/
      - media:/app/media/
    networks:
      - layer
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    logging:
      driver: syslog
      options:
        tag: air_web
        syslog-facility: local5

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/app/static:ro
      - media:/app/media:ro
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - layer
    logging:
      driver: syslog
      options:
        tag: air_nginx
        syslog-facility: local5

  redis:
    image: redis:latest
    entrypoint: redis-server --appendonly yes --maxmemory-policy volatile-ttl --aof-use-rdb-preamble yes --save "" --maxclients 65000
    volumes:
      - redis:/data
    networks:
      - layer

  postgres:
    image: postgres:latest
    command: postgres -c 'max_connections=2000'
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - layer
    logging:
      driver: syslog
      options:
        tag: air_postgres
        syslog-facility: local5

  celery:
    image: air:latest
    entrypoint: celery -A main worker -l INFO
    restart: always
    depends_on:
      - redis    
    env_file:
      - .env
    networks:
      - layer
    logging:
      driver: syslog
      options:
        tag: air_celery
        syslog-facility: local5
